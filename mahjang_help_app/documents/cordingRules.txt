コーディングのルール

1.変数名の付け方

キャメルケースを基本とする。ただし、コンポーネント系またはクラス系のファイル名・関数名はパスカル記法とする。定数を記述するファイル内の定数は全て大文字で単語の区切りをアンダーバー(_)でつなげる。日本語をローマ字変換した名前は基本使わないこと、ただし麻雀自体が中国由来のゲームで無理に英語を使用するとかえって読みづらいコードになってしまうため、麻雀由来の用語に関しては許容範囲とする。

2.変数宣言

変数宣言時には基本的にconstを使うこと。変数の値を書き変える場合のみletの使用可。varは変数のスコープが広くなり、管理が大変になるため、使用しない。

3.変数のスコープ

変数のスコープはなるべく狭くすることを意識する。その変数を初めて使用する直前で変数宣言をするのが望ましい。

4.定数

マジックナンバーの使用を避けること。マジックナンバーは定数系のファイルに記述し、定数として呼び出す。
例:どこからの副露かを表すために、-,+,=の記号を使用しているが、初めての人が見た時にこれらの記号が何を表しているかが分からない。そのため、Constant.tsに
```
const MELD_FROM_CODE = {
  LEFT: "-",
  FRONT: "=",
  RIGHT: "+",
};
```
という定数を作成している。この定数を使うことで、どこから鳴いたかを表す記号だと判断しやすくなる。"自分以外の人がそのコードを見ても分かるか","麻雀がそんなに詳しい人でなくても理解できるか"等を意識してコーディングする。

5.ファイルの種類
プログラムファイルは基本TypeScript系(ts,tsx)を使うこと。JSXの記述を使うときはtsx,使わないときはtsを使用する。js,jsxは開発時にバグを検出しづらいため、使用は避けること。

6.インポート、エクスポート

defaultインポート,エクスポートは基本的に使用しないこと。

7.コンポーネントファンクション

コンポーネントファンクションは下記の記述で統一する。

Component.tsx
```
const Component = ({
  name,
  age,
}: {
  name: string;
  age: number;
}) => {
  (事前処理など)
  return (
    <JSXの記述/>
  )
};
```

重要なこと
・functionでの宣言でなく、アロー関数で記述する。
・JSXでの記述が一文でもreturnを省略しない。
・親コンポーネントから何か値を受け取りたい場合は、分割代入を使用する。